<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.daxiang.dao.ActionDao">
    <resultMap id="ResultMapWithBLOBs" type="com.daxiang.mbg.po.Action" extends="com.daxiang.mbg.mapper.ActionMapper.ResultMapWithBLOBs"/>

    <select id="selectOtherActionsInUse" resultMap="ResultMapWithBLOBs">
        select * from action where
        JSON_CONTAINS(set_up->'$[*].actionId', '${actionId}', '$')
        or JSON_CONTAINS(steps->'$[*].actionId', '${actionId}', '$')
        or JSON_CONTAINS(tear_down->'$[*].actionId', '${actionId}', '$')
        or JSON_CONTAINS(depends->'$[*]', '${actionId}', '$')
        or JSON_CONTAINS(action_imports->'$[*]', '${actionId}', '$')
    </select>

    <select id="selectByLocalVarsEnvironmentId" resultMap="ResultMapWithBLOBs">
        select * from action where JSON_CONTAINS(local_vars->'$[*].environmentValues[*].environmentId', '${envId}', '$')
    </select>

    <select id="selectPublishedCascaderData" resultMap="ResultMapWithBLOBs">
        select * from action where
        state = 2
        and (project_id = #{projectId} or (project_id is null and (platforms is null or JSON_EXTRACT(platforms, '$[0]') is null or JSON_CONTAINS(platforms->'$[*]', '${platform}', '$'))))
        <if test="type != null">and type = #{type}</if>
    </select>

    <insert id="insertBasicActions">
        insert into action (id, name, description,
          type, invoke, return_value_type, return_value_desc,
          category_id, project_id, state, params, platforms)
        values
        <foreach collection="actions" item="action" separator=",">
          (
            #{action.id}, #{action.name}, #{action.description},
            #{action.type}, #{action.invoke}, #{action.returnValueType}, #{action.returnValueDesc},
            #{action.categoryId}, #{action.projectId}, #{action.state},
            #{action.params,jdbcType=LONGVARCHAR,typeHandler=com.daxiang.typehandler.ParamListTypeHandler},
            #{action.platforms,jdbcType=LONGVARCHAR,typeHandler=com.daxiang.typehandler.IntegerListTypeHandler}
          )
        </foreach>
    </insert>
</mapper>

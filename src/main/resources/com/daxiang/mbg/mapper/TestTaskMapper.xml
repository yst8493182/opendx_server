<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.daxiang.mbg.mapper.TestTaskMapper">
  <resultMap id="BaseResultMap" type="com.daxiang.mbg.po.TestTask">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="project_id" jdbcType="INTEGER" property="projectId" />
    <result column="test_plan_id" jdbcType="INTEGER" property="testPlanId" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="creator_uid" jdbcType="INTEGER" property="creatorUid" />
    <result column="pass_case_count" jdbcType="INTEGER" property="passCaseCount" />
    <result column="fail_case_count" jdbcType="INTEGER" property="failCaseCount" />
    <result column="skip_case_count" jdbcType="INTEGER" property="skipCaseCount" />
    <result column="commit_time" jdbcType="TIMESTAMP" property="commitTime" />
    <result column="finish_time" jdbcType="TIMESTAMP" property="finishTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.daxiang.mbg.po.TestTask">
    <result column="test_plan" jdbcType="LONGVARCHAR" property="testPlan" typeHandler="com.daxiang.typehandler.TestPlanTypeHandler" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, project_id, test_plan_id, status, creator_uid, pass_case_count, fail_case_count, 
    skip_case_count, commit_time, finish_time
  </sql>
  <sql id="Blob_Column_List">
    test_plan
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.daxiang.mbg.po.TestTaskExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from test_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.daxiang.mbg.po.TestTaskExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from test_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from test_task
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from test_task
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.daxiang.mbg.po.TestTaskExample">
    delete from test_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.daxiang.mbg.po.TestTask">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into test_task (project_id, test_plan_id, status, 
      creator_uid, pass_case_count, fail_case_count, 
      skip_case_count, commit_time, finish_time, 
      test_plan
      )
    values (#{projectId,jdbcType=INTEGER}, #{testPlanId,jdbcType=INTEGER}, #{status,jdbcType=TINYINT}, 
      #{creatorUid,jdbcType=INTEGER}, #{passCaseCount,jdbcType=INTEGER}, #{failCaseCount,jdbcType=INTEGER}, 
      #{skipCaseCount,jdbcType=INTEGER}, #{commitTime,jdbcType=TIMESTAMP}, #{finishTime,jdbcType=TIMESTAMP}, 
      #{testPlan,jdbcType=LONGVARCHAR,typeHandler=com.daxiang.typehandler.TestPlanTypeHandler}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.daxiang.mbg.po.TestTask">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into test_task
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="projectId != null">
        project_id,
      </if>
      <if test="testPlanId != null">
        test_plan_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="creatorUid != null">
        creator_uid,
      </if>
      <if test="passCaseCount != null">
        pass_case_count,
      </if>
      <if test="failCaseCount != null">
        fail_case_count,
      </if>
      <if test="skipCaseCount != null">
        skip_case_count,
      </if>
      <if test="commitTime != null">
        commit_time,
      </if>
      <if test="finishTime != null">
        finish_time,
      </if>
      <if test="testPlan != null">
        test_plan,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="projectId != null">
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="testPlanId != null">
        #{testPlanId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="creatorUid != null">
        #{creatorUid,jdbcType=INTEGER},
      </if>
      <if test="passCaseCount != null">
        #{passCaseCount,jdbcType=INTEGER},
      </if>
      <if test="failCaseCount != null">
        #{failCaseCount,jdbcType=INTEGER},
      </if>
      <if test="skipCaseCount != null">
        #{skipCaseCount,jdbcType=INTEGER},
      </if>
      <if test="commitTime != null">
        #{commitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishTime != null">
        #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="testPlan != null">
        #{testPlan,jdbcType=LONGVARCHAR,typeHandler=com.daxiang.typehandler.TestPlanTypeHandler},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.daxiang.mbg.po.TestTaskExample" resultType="java.lang.Long">
    select count(*) from test_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update test_task
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.projectId != null">
        project_id = #{record.projectId,jdbcType=INTEGER},
      </if>
      <if test="record.testPlanId != null">
        test_plan_id = #{record.testPlanId,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.creatorUid != null">
        creator_uid = #{record.creatorUid,jdbcType=INTEGER},
      </if>
      <if test="record.passCaseCount != null">
        pass_case_count = #{record.passCaseCount,jdbcType=INTEGER},
      </if>
      <if test="record.failCaseCount != null">
        fail_case_count = #{record.failCaseCount,jdbcType=INTEGER},
      </if>
      <if test="record.skipCaseCount != null">
        skip_case_count = #{record.skipCaseCount,jdbcType=INTEGER},
      </if>
      <if test="record.commitTime != null">
        commit_time = #{record.commitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.finishTime != null">
        finish_time = #{record.finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.testPlan != null">
        test_plan = #{record.testPlan,jdbcType=LONGVARCHAR,typeHandler=com.daxiang.typehandler.TestPlanTypeHandler},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update test_task
    set id = #{record.id,jdbcType=INTEGER},
      project_id = #{record.projectId,jdbcType=INTEGER},
      test_plan_id = #{record.testPlanId,jdbcType=INTEGER},
      status = #{record.status,jdbcType=TINYINT},
      creator_uid = #{record.creatorUid,jdbcType=INTEGER},
      pass_case_count = #{record.passCaseCount,jdbcType=INTEGER},
      fail_case_count = #{record.failCaseCount,jdbcType=INTEGER},
      skip_case_count = #{record.skipCaseCount,jdbcType=INTEGER},
      commit_time = #{record.commitTime,jdbcType=TIMESTAMP},
      finish_time = #{record.finishTime,jdbcType=TIMESTAMP},
      test_plan = #{record.testPlan,jdbcType=LONGVARCHAR,typeHandler=com.daxiang.typehandler.TestPlanTypeHandler}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update test_task
    set id = #{record.id,jdbcType=INTEGER},
      project_id = #{record.projectId,jdbcType=INTEGER},
      test_plan_id = #{record.testPlanId,jdbcType=INTEGER},
      status = #{record.status,jdbcType=TINYINT},
      creator_uid = #{record.creatorUid,jdbcType=INTEGER},
      pass_case_count = #{record.passCaseCount,jdbcType=INTEGER},
      fail_case_count = #{record.failCaseCount,jdbcType=INTEGER},
      skip_case_count = #{record.skipCaseCount,jdbcType=INTEGER},
      commit_time = #{record.commitTime,jdbcType=TIMESTAMP},
      finish_time = #{record.finishTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.daxiang.mbg.po.TestTask">
    update test_task
    <set>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=INTEGER},
      </if>
      <if test="testPlanId != null">
        test_plan_id = #{testPlanId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="creatorUid != null">
        creator_uid = #{creatorUid,jdbcType=INTEGER},
      </if>
      <if test="passCaseCount != null">
        pass_case_count = #{passCaseCount,jdbcType=INTEGER},
      </if>
      <if test="failCaseCount != null">
        fail_case_count = #{failCaseCount,jdbcType=INTEGER},
      </if>
      <if test="skipCaseCount != null">
        skip_case_count = #{skipCaseCount,jdbcType=INTEGER},
      </if>
      <if test="commitTime != null">
        commit_time = #{commitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishTime != null">
        finish_time = #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="testPlan != null">
        test_plan = #{testPlan,jdbcType=LONGVARCHAR,typeHandler=com.daxiang.typehandler.TestPlanTypeHandler},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.daxiang.mbg.po.TestTask">
    update test_task
    set project_id = #{projectId,jdbcType=INTEGER},
      test_plan_id = #{testPlanId,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      creator_uid = #{creatorUid,jdbcType=INTEGER},
      pass_case_count = #{passCaseCount,jdbcType=INTEGER},
      fail_case_count = #{failCaseCount,jdbcType=INTEGER},
      skip_case_count = #{skipCaseCount,jdbcType=INTEGER},
      commit_time = #{commitTime,jdbcType=TIMESTAMP},
      finish_time = #{finishTime,jdbcType=TIMESTAMP},
      test_plan = #{testPlan,jdbcType=LONGVARCHAR,typeHandler=com.daxiang.typehandler.TestPlanTypeHandler}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.daxiang.mbg.po.TestTask">
    update test_task
    set project_id = #{projectId,jdbcType=INTEGER},
      test_plan_id = #{testPlanId,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      creator_uid = #{creatorUid,jdbcType=INTEGER},
      pass_case_count = #{passCaseCount,jdbcType=INTEGER},
      fail_case_count = #{failCaseCount,jdbcType=INTEGER},
      skip_case_count = #{skipCaseCount,jdbcType=INTEGER},
      commit_time = #{commitTime,jdbcType=TIMESTAMP},
      finish_time = #{finishTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>